kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  labels:
    app: {{ .Values.app_name }}
    role: {{ .Values.label_api_role }}
    name: {{ .Values.app_name }}-dc
    env: {{ .Values.env }}
  name:  {{ .Values.app_name }}-dc
spec:
  replicas: 2
  selector:
    app: {{ .Values.app_name }}
    deploymentconfig: {{ .Values.app_name }}-dc
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        openshift.io/generated-by: OpenShiftWebConsole
      creationTimestamp: null
      labels:
        deploymentconfig: {{ .Values.app_name }}-dc
        role: {{ .Values.label_api_role }}
        app: {{ .Values.app_name }}
        env: {{ .Values.env }}
    spec:
      # initContainers:
      # - name: {{ .Values.app_name }}-init
      #   image: image-registry.openshift-image-registry.svc:5000/{{ .Values.license_plate }}-tools/kirk:{{ .Chart.AppVersion }}
      #   imagePullPolicy: Always
      #   env:
      #     - name: POSTGRES_PORT
      #       value: {{ .Values.kirk_pgdb_params.kirk_database_port | quote }}
      #     - name: POSTGRES_DB_NAME
      #       valueFrom:
      #         secretKeyRef:
      #           key: database-name
      #           name: {{ .Values.kirk_pgdb_secret_name }}
      #     - name: POSTGRES_PASSWORD
      #       valueFrom:
      #         secretKeyRef:
      #           key: database-password
      #           name: {{ .Values.kirk_pgdb_secret_name }}
      #     - name: POSTGRES_USER_NAME
      #       valueFrom:
      #         secretKeyRef:
      #           key: database-user
      #           name: {{ .Values.kirk_pgdb_secret_name }}
      #     - name: POSTGRES_HOST
      #       value: "{{ .Values.app_name}}-postgres-svc"
      #   command:
      #   - /bin/sh
      #   - -c
      #   - sleep 30 &&
      #     echo "Begin Migration ..." &&
      #     python3 "manage.py migrate --noinput" &&
      #     echo "Migration Completed" &&
      #     sleep 2

      containers:
        - env:
            - name: DJANGO_DEBUG
              value: 'False'
            - name: POSTGRES_PORT
              value: {{ .Values.kirk_pgdb_params.kirk_database_port | quote }}
            - name: POSTGRES_DB_NAME
              valueFrom:
                secretKeyRef:
                  key: database-name
                  name: {{ .Values.kirk_pgdb_secret_name }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  key: database-password
                  name: {{ .Values.kirk_pgdb_secret_name }}
            - name: POSTGRES_USER_NAME
              valueFrom:
                secretKeyRef:
                  key: database-user
                  name: {{ .Values.kirk_pgdb_secret_name }}
            - name: POSTGRES_HOST
              value: "{{ .Values.app_name}}-postgres-svc"
          image: image-registry.openshift-image-registry.svc:5000/{{ .Values.license_plate }}-tools/kirk:{{ .Chart.AppVersion }}
          imagePullPolicy: IfNotPresent
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - '-i'
                - '-c'
                - python manage.py check
                #- pg_isready -h {{ .Values.app_name}}-postgres-svc -p {{ .Values.kirk_pgdb_params.kirk_database_port }}
            failureThreshold: 5
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          livenessProbe: 
            httpGet:
              path: /
              port: {{ .Values.kirk_app_params.kirk_port }}
            initialDelaySeconds: 5
            periodSeconds: 5
            failureThreshold: 5
          startupProbe:
            httpGet:
              path: /
              port: {{ .Values.kirk_app_params.kirk_port }}
            initialDelaySeconds: 15
            periodSeconds: 10
            failureThreshold: 3
          name: kirk
          ports:
            - containerPort: {{ .Values.kirk_app_params.kirk_port }}
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 5
